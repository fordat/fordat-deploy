{"version":3,"sources":["components/Navbar.js","components/About.js","components/Work.js","components/Painting.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","class","to","className","React","Component","About","Work","Painting","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAiBeA,E,4JAbX,WACI,OACI,qBAAKC,MAAM,cAAX,SACI,sBAAKA,MAAM,WAAX,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,mBACA,cAAC,IAAD,CAAMA,GAAG,QAAQC,UAAU,WAA3B,kBACA,cAAC,IAAD,CAAMD,GAAG,YAAYC,UAAU,WAA/B,+B,GAPCC,IAAMC,WCSZC,E,4JATX,WACI,OACI,8BACI,uD,GAJIF,IAAMC,WCUXE,E,4JATX,WACI,OACI,8BACI,sD,GAJGH,IAAMC,WCUVG,E,4JATX,WACI,OACI,8BACI,0D,GAJOJ,IAAMC,WCwBdI,MAjBf,WACE,OACE,8BACE,sBAAKN,UAAU,UAAf,UACE,oBAAIA,UAAU,UAAd,0BACA,eAAC,IAAD,WACE,cAAC,EAAD,IACA,uBACA,cAAC,IAAD,CAAOO,KAAK,IAAIC,OAAK,EAACC,UAAWN,IACjC,cAAC,IAAD,CAAOI,KAAK,QAAQE,UAAWL,IAC/B,cAAC,IAAD,CAAOG,KAAK,YAAYE,UAAWJ,aCP9BK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4a0bd539.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Navbar extends React.Component {\n    render() {\n        return (\n            <div class=\"nav-wrapper\">\n                <nav class=\"main-nav\">\n                    <Link to=\"/\">About</Link>\n                    <Link to=\"/work\" className=\"nav-link\">Work</Link>\n                    <Link to=\"/painting\" className=\"nav-link\">Painting</Link>\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default Navbar","import React from 'react';\n\nclass About extends React.Component {\n    render() {\n        return (\n            <div>\n                <p>About component!</p>\n            </div>\n        )\n    }\n}\n\nexport default About","import React from 'react';\n\nclass Work extends React.Component {\n    render() {\n        return (\n            <div>\n                <p>Work component!</p>\n            </div>\n        )\n    }\n}\n\nexport default Work","import React from 'react';\n\nclass Painting extends React.Component {\n    render() {\n        return (\n            <div>\n                <p>Painting component!</p>\n            </div>\n        )\n    }\n}\n\nexport default Painting","import React from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport './App.css';\n\nimport Navbar from './components/Navbar.js';\nimport About from './components/About.js';\nimport Work from './components/Work.js';\nimport Painting from './components/Painting.js';\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"App-box\">\n        <h1 className=\"content\">Ford Atwater</h1>\n        <BrowserRouter>\n          <Navbar />\n          <br />\n          <Route path=\"/\" exact component={About} />\n          <Route path=\"/work\" component={Work} />\n          <Route path=\"/painting\" component={Painting} />\n        </BrowserRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}